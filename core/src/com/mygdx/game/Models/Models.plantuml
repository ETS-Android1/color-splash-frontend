@startuml

title __MODELS's Class Diagram__\n

  namespace com.mygdx.game {
    namespace Models {
      class com.mygdx.game.Models.Background {
          + Background()
          + drawBackground()
      }
    }
  }
  

  namespace com.mygdx.game {
    namespace Models {
      class com.mygdx.game.Models.Button {
          - button : Button
          - checked : boolean
          - style : ButtonStyle
          + Button()
          + getButton()
          + getIsChecked()
          + isObjectClicked()
          + setChecked()
      }
    }
  }
  

  namespace com.mygdx.game {
    namespace Models {
      class com.mygdx.game.Models.Dots {
          - colors : List<Integer>
          - darkGreyDot : Texture
          - dots : List<GameObject>
          - lightGreyDot : Texture
          + Dots()
          + drawDots()
          + getColor()
          + getDots()
          + makeList()
          + setDarkGreyDot()
      }
    }
  }
  

  namespace com.mygdx.game {
    namespace Models {
      class com.mygdx.game.Models.GameObject {
          # animatedImage : TextureRegion
          # bounds : Rectangle
          # image : Texture
          # isRendered : boolean
          # scale : double
          # screenHeight : int
          # screenWidth : int
          # xPos : double
          # yPos : double
          + GameObject()
          + drawGameObject()
          + drawStage()
          + getHeight()
          + getImage()
          + getWidth()
          + getXPos()
          + getYPos()
          + setFilePath()
          + setImage()
          + toString()
      }
    }
  }
  

  namespace com.mygdx.game {
    namespace Models {
      class com.mygdx.game.Models.InputField {
          # textField : TextField
          - actor : Actor
          - cursor : LabelStyle
          - cursorColor : Pixmap
          - style : TextFieldStyle
          + InputField()
          + getTextField()
          - setCursor()
      }
    }
  }
  

  namespace com.mygdx.game {
    namespace Models {
      class com.mygdx.game.Models.Splash {
          - blue_splash : List<String>
          - green_splash : List<String>
          - red_splash : List<String>
          - splashes : Map<Integer, List<String>>
          - yellow_splash : List<String>
          + Splash()
          + getSplashes()
      }
    }
  }
  

  com.mygdx.game.Models.Background -up-|> com.mygdx.game.Models.GameObject
  com.mygdx.game.Models.Button -up-|> com.mygdx.game.Models.GameObject
  com.mygdx.game.Models.InputField -up-|> com.mygdx.game.Models.GameObject
  com.mygdx.game.Models.Splash -up-|> com.mygdx.game.Models.GameObject


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
